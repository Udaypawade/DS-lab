#include <iostream> 
using namespace std; 
class CoffeeShop{ 
 int token_queue[10]; 
 int r=-1; 
 int f=0; 
  
 public: 
 /*CoffeeShop(){ 
  r = 0; 
  f = 0; 
  } */ 
 
//Enqueue function 
 void enqueue(int t){ 
 if(isFull()){ 
  cout<<"token are finished(enqueue) !"; 
  } 
  else{ 
   r++; 
   token_queue[r]=t; 
   } 
 }; 
 
//Dequeue function 
 int dequeue(){ 
  if(isEmpty()){ 
  cout<<"Cannot Process token are finished (dequeue) !"; 
  } 
  else{ 
   int x = token_queue[f]; 
   cout<<"Order of "<<token_queue[f]<<" is completed"; 
   f++; 
   return x; 
   } 
  return -1; 
 }; 
  
// Function to check if the queue is empty 
 int isEmpty(){ 
     if(f > r){ 
   return 1; 
   }; 
 return 0; 
}; 
 
// Function to check if the queue is full 
 int isFull(){ 
    if(r == 10 - 1){ 
  return 1; 
  }; 
 return 0; 
}; 
 
void display(){ 
 for(int i=f; i<=r; i++){ 
  cout<<token_queue[i]; 
  } 
 } 
  }; 

 // Main function 
int main() { 
    int choice; 
    int val; 
    printf("Welcome to the Coffee Shop Queue System!\n"); 
    CoffeeShop q1 ; 
    while (1) { 
   
        cout<<"\nMenu:\n"; 
        cout<<"1. Issue Token (Enqueue)\n"; 
        cout<<"2. Process Order (Dequeue)\n"; 
        cout<<"3. display\n"; 
        cout<<"4. Exit\n"; 
        cin>>choice;
        
 
        switch (choice) { 
            case 1: 
                    cout<<"Enter customer token No. : "; 
                    cin>>val; 
                    q1.enqueue(val); 
                
                break; 
            case 2: 
                    q1.dequeue(); 
                break; 
                    
             case 3: 
                q1.display(); 
             break; 
              
              case 4: 
                  cout<<"Exiting Coffee Shop Queue System. Goodbye!\n"; 
                return 0; 
                 
            default: 
                cout<<"Invalid choice. Please enter 1-4.\n"; 
        } 
    } 
 
    return 0; 
}

